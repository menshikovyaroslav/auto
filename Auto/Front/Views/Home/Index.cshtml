@using Front.Areas.Admin.Models;

@model Front.ViewModels.HomeViewModel;
@{
    var error = TempData["Error"] as string;
    var info = TempData["Info"] as string;
    ViewBag.Title = "Home";
    Layout = "/Views/Shared/_Layout.cshtml";
}

<!-- Подключение библиотек jQuery и jQuery UI -->
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>

<script>

    $(document).ready(function () {

        $(".draggable-item").draggable({
            revert: "invalid",
            cursor: "move",
        });

        var droppedItemsIds = [];

        $(".droppable-area-stakan").droppable({
            accept: ".draggable-item", // определение, какие элементы можно бросать в область
            drop: function (event, ui) {
                // Обработка события бросания элемента
                // ui.helper содержит информацию о брошенном элементе
                // event содержит информацию о событии

                var droppedItem = ui.helper;

                // Выполняем необходимые действия
                // Например, можно получить идентификатор брошенного элемента
                var droppedItemId = droppedItem.data("id");

                if (droppedItemsIds.indexOf(droppedItemId) === -1) {
                    // Добавляем идентификатор в массив
                    droppedItemsIds.push(droppedItemId);

                    //Пример: вы можете отправить запрос на сервер для обновления данных
         
                    $.ajax({
                        url: "/Home/Index",
                        type: "POST",
                        data: { brandIds: droppedItemsIds },
                        success: function (data) {
                            // Check if data is an object and has the expected structure
                            if (data && data.cars && Array.isArray(data.cars)) {
                                // Clear the table body
                                $(".carscontainer table tbody").empty();

                                console.log("x0");

                                // Iterate over the Cars property of HomeViewModel
                                $.each(data.cars, function (carIndex, car) {

                                    console.log("x1");
                                    

                                    var newRow = $("<tr>");

                                    console.log("x2");

                                    // Add cells with data
                                    // Uncomment if needed: $("<td>").text(car.Model.Brand.Name).appendTo(newRow);
                                    $("<td>").text(car.year).appendTo(newRow);

                                    console.log("x3");

                                    // Add the row to the table
                                    $(".carscontainer table tbody").append(newRow);

                                    console.log("x4");
                                });
                            } else {
                                console.log(data);
                                console.log("Unexpected data structure received from the server");
                            }
                        },
                        error: function (error) {
                            // Handle AJAX request errors
                        }
                    });

                }

            }
        });

        $(".droppable-area-brands").droppable({
            accept: ".draggable-item", // определение, какие элементы можно бросать в область
            drop: function (event, ui) {
                // Обработка события бросания элемента
                // ui.helper содержит информацию о брошенном элементе
                // event содержит информацию о событии

                var droppedItem = ui.helper;

                // Выполняем необходимые действия
                // Например, можно получить идентификатор брошенного элемента
                var droppedItemId = droppedItem.data("id");

                var index = droppedItemsIds.indexOf(droppedItemId);

                if (index === -1) {
                } else {
                    // Если элемент уже присутствует в массиве, удаляем его
                    droppedItemsIds.splice(index, 1);

                    //Пример: вы можете отправить запрос на сервер для обновления данных
                    $.ajax({
                        url: "/Home/Index",
                        type: "POST",
                        data: { brandIds: droppedItemsIds },
                        success: function (data) {
                            // Check if data is an object and has the expected structure
                            if (data && data.cars && Array.isArray(data.cars)) {
                                // Clear the table body
                                $(".carscontainer table tbody").empty();

                                console.log("x0");

                                // Iterate over the Cars property of HomeViewModel
                                $.each(data.cars, function (carIndex, car) {

                                    console.log("x1");


                                    var newRow = $("<tr>");

                                    console.log("x2");

                                    // Add cells with data
                                    // Uncomment if needed: $("<td>").text(car.Model.Brand.Name).appendTo(newRow);
                                    $("<td>").text(car.year).appendTo(newRow);

                                    console.log("x3");

                                    // Add the row to the table
                                    $(".carscontainer table tbody").append(newRow);

                                    console.log("x4");
                                });
                            } else {
                                console.log(data);
                                console.log("Unexpected data structure received from the server");
                            }
                        },
                        error: function (error) {
                            // Handle AJAX request errors
                        }
                    });

                }

            }
        });
    });


</script>

<style>
    .brandlogos {
        display: flex;
        flex-direction: column; /* Это устанавливает направление flex контейнера на вертикальное */
        border: 1px solid #444;
        background-color: #f0f0f0;
        padding: 20px;
    }

    .logoimage {
        margin-bottom: 10px; /* Пример отступа между изображениями (по вашему желанию) */
    }

        .logoimage img {
            width: 60px;
            /* Дополнительные стили для изображения (по вашему желанию) */
        }

    .carscontainer {
        flex: 1;
        background-color: #e0e0e0;
    }

    .stakancontainer {
        text-align: center;
    }

    .stakan {
        text-align: center;
        display: inline-block;
        align-items: center;
    }

        .stakan img {
            display: inline-block;
            align-items: center;
            width: 300px;
        }

    .container {
        display: flex;
        justify-content: space-between; /* Распределение элементов по горизонтали с равным пространством между ними */
        align-items: stretch; /* Выравнивание элементов по центру по вертикали */
        padding: 10px;
        height: 80vh;
    }

</style>

@if (!string.IsNullOrEmpty(error))
{
    <div class="alert-danger">@error</div>
}

@if (!string.IsNullOrEmpty(info))
{
    <div class="alert-info">@info</div>
}

<h2>Home</h2>

<div class="container">
    <div class="brandlogos droppable-area-brands">
        @foreach (var brand in Model.Brands)
        {
            <div data-id="@brand.Id" class="logoimage draggable-item"><img src="@brand.Logo"></div>
        }
    </div>
    <div class="stakancontainer">
        <div class="stakan droppable-area-stakan"><img src="/images/stakan.png"></div>
    </div>
    <div class="carscontainer">
        <table>
            <tr>
                <th>Car</th>
                <th>Email</th>
            </tr>



        </table>
    </div>
</div>